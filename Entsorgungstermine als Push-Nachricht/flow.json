[
    {
        "id": "1dcb9f56.0c98f1",
        "type": "subflow",
        "name": "sendMessage",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "35e0c33.c06683c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1700,
                "y": 300,
                "wires": [
                    {
                        "id": "c015a8c4.074c68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c015a8c4.074c68",
        "type": "telegram sender",
        "z": "1dcb9f56.0c98f1",
        "name": "",
        "bot": "",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7113a90f.78d288",
        "type": "switch",
        "z": "1dcb9f56.0c98f1",
        "name": "",
        "property": "sentMessageId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 280,
        "wires": [
            [
                "291984d6.17272c"
            ],
            [
                "dae111f3.e48ba"
            ]
        ]
    },
    {
        "id": "dae111f3.e48ba",
        "type": "function",
        "z": "1dcb9f56.0c98f1",
        "name": "Nachricht erstellen",
        "func": "var content = msg.message;\n\nmsg.payload = {};\nmsg.payload.chatId = msg.chatId;\nmsg.payload.options = {\n    parse_mode : \"Markdown\"\n};\nmsg.payload.content = content.toString();\nmsg.payload.type = 'message';\n\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "c015a8c4.074c68"
            ]
        ]
    },
    {
        "id": "99589480.be74f8",
        "type": "telegram sender",
        "z": "1dcb9f56.0c98f1",
        "name": "",
        "bot": "",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "dae111f3.e48ba"
            ],
            [
                "dae111f3.e48ba"
            ]
        ]
    },
    {
        "id": "291984d6.17272c",
        "type": "function",
        "z": "1dcb9f56.0c98f1",
        "name": "Löschobjekt erstellen",
        "func": "msg.payload = {};\n\nmsg.payload.chatId = msg.chatId;\nmsg.payload.content = msg.sentMessageId;\nmsg.payload.type = 'deleteMessage';\nmsg.payload.options = {\n    message_id : msg.sentMessageId,\n    chat_id : msg.payload.chatId\n};\n\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 260,
        "wires": [
            [
                "99589480.be74f8"
            ]
        ]
    },
    {
        "id": "6cf432ca.c994fc",
        "type": "comment",
        "z": "1dcb9f56.0c98f1",
        "name": "Nachricht erst löschen, dann neu erstellen (wird sie nur geupdated, wird der Zeitstempel nicht aktualisiert und identische Nachrichten können nicht versendet werden)",
        "info": "",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "1719c06f.03c4a",
        "type": "comment",
        "z": "1dcb9f56.0c98f1",
        "name": "msg.chatId = Propertyname aus dem globalen Kontext (notificationReceiver.peripherals)",
        "info": "",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "7c488ee.709da7",
        "type": "comment",
        "z": "1dcb9f56.0c98f1",
        "name": "msg.sentMessageId = Nachrichten-ID der letzten (zugehörigen) Nachricht, die ersetzt werden soll",
        "info": "",
        "x": 450,
        "y": 120,
        "wires": []
    },
    {
        "id": "56fd0e66.a48f2",
        "type": "comment",
        "z": "1dcb9f56.0c98f1",
        "name": "msg.message = Text-Nachricht, die gesendet werden soll, Markdown möglich",
        "info": "",
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "773a7f9f.0ee99",
        "type": "catch",
        "z": "1dcb9f56.0c98f1",
        "name": "",
        "scope": [
            "99589480.be74f8",
            "c015a8c4.074c68"
        ],
        "uncaught": false,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "b12e415f.b316e"
            ]
        ]
    },
    {
        "id": "b12e415f.b316e",
        "type": "debug",
        "z": "1dcb9f56.0c98f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "2505426d.83176e",
        "type": "switch",
        "z": "1dcb9f56.0c98f1",
        "name": "ChatId gesetzt?",
        "property": "chatId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "7113a90f.78d288"
            ]
        ]
    },
    {
        "id": "35e0c33.c06683c",
        "type": "function",
        "z": "1dcb9f56.0c98f1",
        "name": "ChatId auslesen, wenn es ein String ist",
        "func": "switch (typeof msg.chatId) {\n    case 'string':\n        msg.chatId = global.get(msg.chatId);\n        break;\n}\n\nif (msg.chatId !== undefined) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "2505426d.83176e"
            ]
        ]
    },
    {
        "id": "dca76fb9.f45c6",
        "type": "inject",
        "z": "f1225c9f.60852",
        "name": "täglich 0400 den Kalender abfragen",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 04 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "eb319001.ff2e9"
            ]
        ]
    },
    {
        "id": "630ff9a6.e2e2b8",
        "type": "function",
        "z": "f1225c9f.60852",
        "name": "Nächste Termine aktualisieren",
        "func": "let map = global.get(\"disposalData\") || {};\ndelete map[\"today\"];\ndelete map[\"tomorrow\"];\n\nlet upcoming = false;\nlet disposalDates = msg.payload;\nfor (var i = 0; i < disposalDates.length; i++) {\n    let key = disposalDates[i].topic;\n    let countdown = disposalDates[i].countdown.days + 1;\n    \n    map[key] = countdown || 0;\n\n    if (countdown == 0) {\n        if (map[\"today\"] === undefined) {\n            map[\"today\"] = key;\n        } else {\n            map[\"today\"] += \" und \" + key;\n        }\n        upcoming = true;\n\n    } else if (countdown == 1) {\n        if (map[\"tomorrow\"] === undefined) {\n            map[\"tomorrow\"] = key;\n        } else {\n            map[\"tomorrow\"] += \" und \" + key;\n        }\n        upcoming = true;\n    }\n}\n\nglobal.set(\"disposalData\", map);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "28e9ceb5.e40b42",
        "type": "comment",
        "z": "f1225c9f.60852",
        "name": "Abfalltermine",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "2db5bad9.f786b6",
        "type": "inject",
        "z": "f1225c9f.60852",
        "name": "täglich nachmittags nachschauen, ob morgen etwas abgeholt wird",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "30 17 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "debd0fe3.ddfc7"
            ]
        ]
    },
    {
        "id": "c14dd758.d1d338",
        "type": "inject",
        "z": "f1225c9f.60852",
        "name": "täglich morgens erinnern, dass gleich etwas abgeholt wird",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "7b365890.f35968"
            ]
        ]
    },
    {
        "id": "debd0fe3.ddfc7",
        "type": "function",
        "z": "f1225c9f.60852",
        "name": "Nachricht für morgige Termine bauen",
        "func": "let map = global.get('disposalData') || {};\n\nif (map[\"tomorrow\"] !== undefined) {\n    msg.message = \"? Morgen wird \" + map[\"tomorrow\"] + \" abgeholt.\";\n    msg.type = map[\"tomorrow\"];\n\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "b3cac96c.613888"
            ]
        ]
    },
    {
        "id": "7b365890.f35968",
        "type": "function",
        "z": "f1225c9f.60852",
        "name": "Nachricht für heutige Termine bauen",
        "func": "let map = global.get('disposalData') || {};\n\nif (map[\"today\"] !== undefined) {\n    msg.message = \"? Heute wird \" + map[\"today\"] + \" abgeholt.\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "b3cac96c.613888"
            ]
        ]
    },
    {
        "id": "b3cac96c.613888",
        "type": "change",
        "z": "f1225c9f.60852",
        "name": "Chatdaten festlegen",
        "rules": [
            {
                "t": "set",
                "p": "sentMessageId",
                "pt": "msg",
                "to": "disposalData.sentMessageId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "chatId",
                "pt": "msg",
                "to": "notificationReceiver.disposals",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "67ce5b1.e03d4a4"
            ]
        ]
    },
    {
        "id": "67ce5b1.e03d4a4",
        "type": "subflow:1dcb9f56.0c98f1",
        "z": "f1225c9f.60852",
        "name": "",
        "env": [],
        "x": 1340,
        "y": 180,
        "wires": [
            [
                "46f49295.bb522c"
            ]
        ]
    },
    {
        "id": "46f49295.bb522c",
        "type": "change",
        "z": "f1225c9f.60852",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "disposalData.sentMessageId",
                "pt": "global",
                "to": "payload.sentMessageId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "eb319001.ff2e9",
        "type": "ical-upcoming",
        "z": "f1225c9f.60852",
        "confignode": "",
        "checkall": false,
        "cron": "",
        "timeout": "14",
        "timeoutUnits": "days",
        "name": "",
        "offset": "",
        "endpreview": "100",
        "preview": "14",
        "previewUnits": "days",
        "pastview": "",
        "pastviewUnits": "days",
        "trigger": "always",
        "filter": "",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "630ff9a6.e2e2b8"
            ]
        ]
    },
    {
        "id": "8e580233.3ffff",
        "type": "inject",
        "z": "f1225c9f.60852",
        "name": "ChatId manuell in den globalen Context setzen",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 320,
        "y": 360,
        "wires": [
            [
                "4e4a5656.520d28"
            ]
        ]
    },
    {
        "id": "4e4a5656.520d28",
        "type": "change",
        "z": "f1225c9f.60852",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "notificationReceiver.disposals",
                "pt": "global",
                "to": "<hier die Telegram-ChatId eintragen>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 360,
        "wires": [
            []
        ]
    }
]